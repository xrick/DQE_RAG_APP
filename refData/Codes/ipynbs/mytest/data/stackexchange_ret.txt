'Question: Combine Python f-string with printf style formatting?\n<span class="highlight">Python</span> <span class="highlight">f</span>-strings work well for the variables, and I&#39;m using a printf-style %s and providing the long expression outside the <span class="highlight">string</span> because it would just clutter the command template too much if placed &hellip; Edit: to clarify, my <span class="highlight">question</span> is how to put placeholders in <span class="highlight">f</span>-strings without declaring additional named variables, not how to inline calls to getcwd() in <span class="highlight">f</span>-strings. &hellip; \n\nQuestion: prompt-toolkit: How can I properly escape HTML-formatted return results from an API?\n<span class="highlight">Question</span> is: How can I escape this return result and maintain formatting using printft()? &hellip; If I use printft(HTML(escape ... and escape my entire <span class="highlight">f</span>-<span class="highlight">string</span>, I lose formatting or color or whatever else I wanna do with it since, well, it&#39;s all escaped. &hellip; \n\nQuestion: How to pass list of integers as arguments for django&#39;s raw SQL, without formatting string\nThere are other solutions that suggest to generate a place holder and use <span class="highlight">f</span>-<span class="highlight">string</span> to <span class="highlight">format</span> the raw SQL statement, such as.\ndef raw_query(self, ids: list[int]) -&gt; str:\n    placeholder = &#39;,&#39;.join([&#39;%s&#39; &hellip; ] * len(ids))\n    return <span class="highlight">f</span>&quot;&quot;&quot;select * from table where some_id in ({placeholders})&quot;&quot;&quot;\n\n^ This works\nStill, I am wondering if there&#39;s a better solution as I don&#39;t want to <span class="highlight">string</span> <span class="highlight">format</span> my SQL statement. &hellip; '